# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record,
# publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  - main

schedules:
  - cron: "0 0 1 * *"
    displayName: Monthly build..
    branches:
      include:
        - releases/*
    always: true

variables:
  codecov.token: "9c990c5a-0b27-4918-a5b6-3d5e10d05c4f"

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    linux:
      vm_Image: "Ubuntu-16.04"
      python.version: "3.7"
    mac:
      vm_Image: "macOS-10.14"
      python.version: "3.7"
    windows:
      vm_Image: "vs2017-win2016"
      python.version: "3.7"

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'

  - script: |
      python -m pip install --upgrade pip
      python3 -m pip install -e .
      pip3 install codecov
    displayName: 'Install dependencies'
    condition: not(contains(variables['Build.SourceVersionMessage'],
      '[skip ci]'))

  - script: |
      coverage run -m unittest discover src
    displayName: 'unit test'
    condition: not(contains(variables['Build.SourceVersionMessage'],
      '[skip ci]'))

  - script: |
      bash <(curl -s https://codecov.io/bash)
    displayName: 'send to codecov'
    condition: not(contains(variables['Build.SourceVersionMessage'],
      '[skip ci]'))
